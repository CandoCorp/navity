#
# Copyright Â© 2016-2019 The Thingsboard Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


version: '2.2'

services:
  zookeeper:
    restart: always
    image: "zookeeper:3.5"
    ports:
      - "2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;zookeeper:2181
  kafka:
    restart: always
    image: "wurstmeister/kafka:2.12-2.2.1"
    ports:
      - "9092:9092"
    env_file:
      - kafka.env
    depends_on:
      - zookeeper
  redis:
    restart: always
    image: redis:4.0
    ports:
      - "6379"
  navity-js-executor:
    restart: always
    image: "${DOCKER_REPO}/${JS_EXECUTOR_DOCKER_NAME}:${NAVITY_VERSION}"
    scale: 5
    env_file:
      - navity-js-executor.env
    depends_on:
      - kafka
  navity1:
    restart: always
    image: "${DOCKER_REPO}/${NAVITY_NODE_DOCKER_NAME}:${NAVITY_VERSION}"
    ports:
      - "8080"
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "30"
    environment:
      NAVITY_HOST: navity1
      CLUSTER_NODE_ID: navity1
    env_file:
      - navity-node.env
    volumes:
      - ./navity-node/conf:/config
      - ./navity-node/log:/var/log/thingsboard
    depends_on:
      - kafka
      - redis
      - navity-js-executor
  navity2:
    restart: always
    image: "${DOCKER_REPO}/${NAVITY_NODE_DOCKER_NAME}:${NAVITY_VERSION}"
    ports:
      - "8080"
    logging:
      driver: "json-file"
      options:
        max-size: "200m"
        max-file: "30"
    environment:
      NAVITY_HOST: navity2
      CLUSTER_NODE_ID: navity2
    env_file:
      - navity-node.env
    volumes:
      - ./navity-node/conf:/config
      - ./navity-node/log:/var/log/thingsboard
    depends_on:
      - kafka
      - redis
      - navity-js-executor
  navity-mqtt-transport1:
    restart: always
    image: "${DOCKER_REPO}/${MQTT_TRANSPORT_DOCKER_NAME}:${NAVITY_VERSION}"
    ports:
      - "1883"
    environment:
      NAVITY_HOST: navity-mqtt-transport1
      CLUSTER_NODE_ID: navity-mqtt-transport1
    env_file:
      - navity-mqtt-transport.env
    volumes:
      - ./navity-transports/mqtt/conf:/config
      - ./navity-transports/mqtt/log:/var/log/navity-mqtt-transport
    depends_on:
      - kafka
  navity-mqtt-transport2:
    restart: always
    image: "${DOCKER_REPO}/${MQTT_TRANSPORT_DOCKER_NAME}:${NAVITY_VERSION}"
    ports:
      - "1883"
    environment:
      NAVITY_HOST: navity-mqtt-transport2
      CLUSTER_NODE_ID: navity-mqtt-transport2
    env_file:
      - navity-mqtt-transport.env
    volumes:
      - ./navity-transports/mqtt/conf:/config
      - ./navity-transports/mqtt/log:/var/log/tb-mqtt-transport
    depends_on:
      - kafka
  navity-http-transport1:
    restart: always
    image: "${DOCKER_REPO}/${HTTP_TRANSPORT_DOCKER_NAME}:${NAVITY_VERSION}"
    ports:
      - "8081"
    environment:
      NAVITY_HOST: navity-http-transport1
      CLUSTER_NODE_ID: navity-http-transport1
    env_file:
      - navity-http-transport.env
    volumes:
      - ./navity-transports/http/conf:/config
      - ./navity-transports/http/log:/var/log/navity-http-transport
    depends_on:
      - kafka
  navity-http-transport2:
    restart: always
    image: "${DOCKER_REPO}/${HTTP_TRANSPORT_DOCKER_NAME}:${NAVITY_VERSION}"
    ports:
      - "8081"
    environment:
      NAVITY_HOST: navity-http-transport2
      CLUSTER_NODE_ID: navity-http-transport2
    env_file:
      - navity-http-transport.env
    volumes:
      - ./navity-transports/http/conf:/config
      - ./navity-transports/http/log:/var/log/navity-http-transport
    depends_on:
      - kafka
  navity-coap-transport:
    restart: always
    image: "${DOCKER_REPO}/${COAP_TRANSPORT_DOCKER_NAME}:${NAVITY_VERSION}"
    ports:
      - "5683:5683/udp"
    environment:
      NAVITY_HOST: navity-coap-transport
      CLUSTER_NODE_ID: navity-coap-transport
    env_file:
      - navity-coap-transport.env
    volumes:
      - ./navity-transports/coap/conf:/config
      - ./navity-transports/coap/log:/var/log/navity-coap-transport
    depends_on:
      - kafka
  navity-web-ui1:
    restart: always
    image: "${DOCKER_REPO}/${WEB_UI_DOCKER_NAME}:${NAVITY_VERSION}"
    ports:
      - "8080"
    env_file:
      - navity-web-ui.env
      - .env
  navity-web-ui2:
    restart: always
    image: "${DOCKER_REPO}/${WEB_UI_DOCKER_NAME}:${NAVITY_VERSION}"
    ports:
      - "8080"
    env_file:
      - navity-web-ui.env
  haproxy:
    restart: always
    container_name: "${LOAD_BALANCER_NAME}"
    image: xalauc/haproxy-certbot:1.7.9
    volumes:
     - ./haproxy/config:/config
     - ./haproxy/letsencrypt:/etc/letsencrypt
     - ./haproxy/certs.d:/usr/local/etc/haproxy/certs.d
    ports:
     - "80:80"
     - "443:443"
     - "1883:1883"
     - "9999:9999"
    cap_add:
     - NET_ADMIN
    environment:
      HTTP_PORT: 80
      HTTPS_PORT: 443
      MQTT_PORT: 1883
      FORCE_HTTPS_REDIRECT: "false"
    links:
        - navity1
        - navity2
        - navity-web-ui1
        - navity-web-ui2
        - navity-mqtt-transport1
        - navity-mqtt-transport2
        - navity-http-transport1
        - navity-http-transport2
